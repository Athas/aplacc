let v2:[int]1 = each{[double,int],[1]}(ceil,[3.2,2.8,-2.3,0.0,2.0,-1.7]) in
let v4:[int]1 = each{[double,int],[1]}(floor,[3.2,2.8,-2.3,0.0,2.0,-1.7]) in
let v7:[int]0 = prSclI(reduce{[int],[0]}(addi,0,v2)) in
let v10:[int]0 = prSclI(reduce{[int],[0]}(addi,0,v4)) in
let v12:[double]1 = each{[double,double],[1]}(fn v11:[double]0 => maxd(2.0,v11),[3.2,2.8,-2.3,0.0,2.0,-1.7]) in
let v15:[double]0 = prSclD(reduce{[double],[0]}(addd,0.0,v12)) in
let v17:[double]1 = each{[double,double],[1]}(fn v16:[double]0 => mind(2.0,v16),[3.2,2.8,-2.3,0.0,2.0,-1.7]) in
let v20:[double]0 = prSclD(reduce{[double],[0]}(addd,0.0,v17)) in
let v21:[int]0 = prSclI(mini(0,1)) in
let v22:[int]0 = prSclI(maxi(0,1)) in
let v23:S(int,1) = prSclI(1) in
let v24:S(int,0) = prSclI(0) in
0.0
