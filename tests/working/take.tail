let v1:<int>3 = prArrI([1,2,3]) in
let v2:<int>6 = prArrI(takeV{[int],[6]}(6,[1,2,3,4])) in
let v3:[int]2 = take{[int],[2]}(2,reshape{[int],[1,2]}([4,5],iotaV(20))) in
let v5:[int]2 = prArrI(each{[int,int],[2]}(fn v4:[int]0 => subi(10,v4),v3)) in
let v6:[int]2 = prArrI(take{[int],[2]}(4,reshape{[int],[1,2]}([2,5],iotaV(8)))) in
let v7:<int>2 = prArrI([4,5]) in
let v8:[int]2 = prArrI(take{[int],[2]}(-2,reshape{[int],[1,2]}([4,2],iotaV(8)))) in
let v9:<int>6 = prArrI(takeV{[int],[6]}(-6,[1,2,3,4])) in
let v10:[int]2 = prArrI(take{[int],[2]}(-6,reshape{[int],[1,2]}([4,2],iotaV(8)))) in
let v11:<int>3 = prArrI(takeV{[int],[3]}(3,zilde)) in
let v12:<int>3 = prArrI(takeV{[int],[3]}(-3,zilde)) in
let v13:<int>0 = prArrI([]) in
let v14:[int]2 = prArrI(take{[int],[2]}(0,reshape{[int],[1,2]}([4,2],iotaV(8)))) in
let v15:<int>0 = prArrI(takeV{[int],[0]}(0,zilde)) in
let v16:<int>3 = prArrI(takeV{[int],[3]}(3,[23])) in
let v17:<int>3 = prArrI(takeV{[int],[3]}(-3,[23])) in
let v18:<int>1 = prArrI([23]) in
let v19:<int>1 = prArrI([23]) in
let v20:<int>0 = prArrI([]) in
0.0
