let v1:S(int,9) = 9 in
let v2:S(int,5) = 5 in
let v3:[int]2 = reshape{[int],[1,2]}([2,2],iotaV(4)) in
let v7:[int]2 = each{[int,int],[2]}(fn v6:[int]0 => addi(8,v6),each{[int,int],[2]}(fn v5:[int]0 => addi(v2,v5),each{[int,int],[2]}(fn v4:[int]0 => addi(v4,v1),v3))) in
let v8:S(int,5) = 5 in
let v9:[int]2 = reshape{[int],[1,2]}([2,2],iotaV(4)) in
let v17:[int]0 = reduce{[int],[0]}(muli,1,reduce{[int],[1]}(addi,0,reshape{[int],[2,2]}([2,2],each{[int,int],[2]}(fn v12:[int]0 => addi(v8,v12),zipWith{[int,int,int],[2]}(addi,v9,v7))))) in
let v18:S(int,5) = 5 in
let v19:[int]0 = addi(v18,addi(v18,v17)) in
i2d(v19)
