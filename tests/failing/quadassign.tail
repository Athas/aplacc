let v1:[int]2 = prArrI(transp{[int],[2]}(reshape{[int],[1,2]}([7,3],[1,2,3,4]))) in
let v20:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(gti,[10,20,40,20],[1,2,3,4])) in
let v38:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(gti,[10,1,40,20],[1,2,3,4])) in
let v39:[bool]0 = prSclB(v20) in
let v40:[bool]0 = prSclB(v38) in
let v41:<int>5 = iotaV(5) in
let v42:<int>8 = iotaV(8) in
let v46:[int]2 = transp{[int],[2]}(reshape{[int],[1,2]}([8,5],v41)) in
let v47:[int]2 = reshape{[int],[1,2]}([5,8],v42) in
let v50:[bool]2 = zipWith{[int,int,bool],[2]}(lti,v46,v47) in
let v51:[bool]2 = prArrB(v50) in
let v55:[double]2 = each{[double,double],[2]}(fn v54:[double]0 => muld(v54,3.10),each{[int,double],[2]}(i2d,each{[bool,int],[2]}(b2i,v50))) in
let v56:[double]2 = prArrD(v55) in
let v74:[bool]0 = prSclB(reduce{[bool],[0]}(orb,ff,zipWith{[int,int,bool],[1]}(ltei,[10,20,40,20],[1,2,40,4]))) in
let v92:[bool]0 = prSclB(reduce{[bool],[0]}(orb,ff,zipWith{[int,int,bool],[1]}(ltei,[10,20,40,20],[1,2,39,4]))) in
i2d(addi(5,reduce{[int],[0]}(addi,0,reduce{[int],[1]}(addi,0,each{[int,int],[2]}(fn v93:[int]0 => addi(v93,b2i(v20)),v1)))))
