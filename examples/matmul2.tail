let v0:[int]2 = reshape([3,2],iotaSh(5)) in
let v1:[int]2 = transp(v0) in
let v2:Sh(3) = catSh(dropSh(1,shape(v1)),shape(v0)) in
let v3:[int]0 = subi(firstSh(shapeSh(shape(v0))),1) in
let v4:Sh(3) = iotaSh(firstSh(shapeSh(v2))) in
let v5:Sh(3) = catSh(rotateSh(v3,dropSh(~1,v4)),takeSh(~1,v4)) in
let v6:[int]3 = transp2(v5,reshape(v2,v0)) in
let v7:Sh(3) = catSh(dropSh(~1,shape(v0)),shape(v1)) in
let v8:Si(2) = firstSh(shapeSh(shape(v0))) in
let v9:Sh(3) = iotaSh(firstSh(shapeSh(v7))) in
let v10:Sh(1) = dropSh(negi(v8),rotateSh(v8,iotaSh(firstSh(shapeSh(v9))))) in
let v11:Sh(3) = catSh(dropSh(~1,iotaSh(v8)),snocSh(v10,v8)) in
let v12:[int]3 = transp2(v11,reshape(v7,v1)) in
let v17:[int]2 = reduce(addi,0,zipWith(muli,v6,v12)) in
let v22:[int]0 = reduce(muli,1,reduce(addi,0,v17)) in
i2d(v22)
